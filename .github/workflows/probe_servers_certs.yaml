name: ðŸ›¸ HTTPx Probed (Cert)
# Alt: 
#MAX_RUNTIME: ~ 10-15 Mins

on:
  workflow_dispatch: # Whenever manually run from actions-tab
  schedule:
    - cron: "20 13 * * *" #( 01:20 PM UTC --> 07:05 PM Evening )
#------------------------------------------------------------------------------------#  
env:
  # DO NOT MODIFY ANYTHING ELSE
  INVENTORY_REPO_USER: "${{ secrets.INVENTORY_REPO_USER }}"
  INVENTORY_REPO_TOKEN: "${{ secrets.INVENTORY_REPO_TOKEN }}"
  TSKEY: "${{ secrets.TSKEY }}"
#------------------------------------------------------------------------------------#
jobs:
  Probe:
    runs-on: ubuntu-latest
    timeout-minutes: 300 
    permissions:
      contents: write
      
    steps:        
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          path: main
          filter: "blob:none" #https://github.blog/2020-12-21-get-up-to-speed-with-partial-clone-and-shallow-clone/
          
      - name: Setup Env
        run: |
          # Presets
          set +x ; set +e
          #--------------#
          #tmp
          SYSTMP="$(dirname $(mktemp -u))" && export SYSTMP="$SYSTMP"
          echo "SYSTMP=$SYSTMP" >> "$GITHUB_ENV"
          #rClone
          mkdir -p "$HOME/.config/rclone"
          echo "${{ secrets.RCLONE_CF_R2_PUB }}" > "$HOME/.config/rclone/rclone.conf"
        continue-on-error: true

      - name: Initialize
        run: |
          # Presets
          set +x ; set +e
          #--------------#
          ##Pre-Exec (INIT)
          curl -qfsSL "https://$INVENTORY_REPO_USER:$INVENTORY_REPO_TOKEN@raw.githubusercontent.com/Azathothas/Inventory/main/.github/scripts/_init_deps.sh" -o "./_init_deps.sh"
          dos2unix --quiet "./_init_deps.sh" 2>/dev/null ; sudo chmod +xwr "./_init_deps.sh" ; source "./_init_deps.sh" >/dev/null 2>&1
          ##Main
          if pg_isready --host="crt.sh" --port="5432" --username="guest" --dbname="certwatch" --timeout="10" | grep -q "no response" || curl -qfksSL -A "Chrome" -I "https://crt.sh" --write-out "%{http_code}" -o /dev/null | grep -q 502; then
              echo -e "\n[-] Failed to connect to crt.sh\n"
              curl -qfksSL -A "Chrome" "https://crt.sh" -I
            exit 1
          else
             # Download
             curl -qfsSL "https://$INVENTORY_REPO_USER:$INVENTORY_REPO_TOKEN@raw.githubusercontent.com/Azathothas/Inventory/main/.github/scripts/probe_servers_certs.sh" -o "./probe_servers_certs.sh"
             dos2unix "./probe_servers_certs.sh" ; sudo chmod +xwr "./probe_servers_certs.sh"
             #Run
             #Always run with STD_OUT + STD_IN >/dev/null
             #bash "./probe_servers_certs.sh" >/dev/null 2>&1
             #Debug
             #bash "./probe_servers_certs.sh"
             #Talscale + Tmux + gotty
             tmux new-session -s "inventory" -d 'bash "./probe_servers_certs.sh" ; tmux kill-session -t "inventory" 2>/dev/null ; exit'
             #nohup gotty --address "$TS_IP" --port "7070" --reconnect --reconnect-time 30 tmux attach-session -t "inventory" -r >/dev/null 2>&1 &
             nohup gotty --address "127.0.0.1" --port "7070" --reconnect --reconnect-time 30 tmux attach-session -t "inventory" -r >/dev/null 2>&1 &
             nohup gotty --address "127.0.0.1" --port "7777" --reconnect --reconnect-time 30 btop --tty_on >/dev/null 2>&1 &
             echo -e "\n\n[+] Tmux TTY: http://$TS_DNS:7070"
             echo -e "[+] BTOP: http://$TS_DNS:7777\n"
             set +x ; while tmux has-session -t "inventory" ; do sleep 1 ; done
          fi
        continue-on-error: true